<?xml version="1.0" encoding="UTF-8"?>
<project name="module_project110" default="compile.module.project110">
  <dirname property="module.project110.basedir" file="${ant.file.module_project110}"/>
  
  <property name="module.jdk.home.project110" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.project110" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.project110" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.project110" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="project110.output.dir" value="${module.project110.basedir}/out/production/Project110"/>
  <property name="project110.testoutput.dir" value="${module.project110.basedir}/out/test/Project110"/>
  
  <path id="project110.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="project110.module.production.classpath">
    <path refid="${module.jdk.classpath.project110}"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  <path id="project110.runtime.production.module.classpath">
    <pathelement location="${project110.output.dir}"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  <path id="project110.module.classpath">
    <path refid="${module.jdk.classpath.project110}"/>
    <pathelement location="${project110.output.dir}"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  <path id="project110.runtime.module.classpath">
    <pathelement location="${project110.testoutput.dir}"/>
    <pathelement location="${project110.output.dir}"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.project110">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.project110">
    <patternset refid="excluded.from.module.project110"/>
  </patternset>
  
  <path id="project110.module.sourcepath">
    <dirset dir="${module.project110.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="project110.module.test.sourcepath">
    <dirset dir="${module.project110.basedir}">
      <include name="tests"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.project110" depends="compile.module.project110.production,compile.module.project110.tests" description="Compile module Project110"/>
  
  <target name="compile.module.project110.production" depends="register.custom.compilers" description="Compile module Project110; production classes">
    <mkdir dir="${project110.output.dir}"/>
    <javac2 destdir="${project110.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.project110}/javac">
      <compilerarg line="${compiler.args.project110}"/>
      <bootclasspath refid="project110.module.bootclasspath"/>
      <classpath refid="project110.module.production.classpath"/>
      <src refid="project110.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.project110"/>
    </javac2>
    
    <copy todir="${project110.output.dir}">
      <fileset dir="${module.project110.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.project110.tests" depends="register.custom.compilers,compile.module.project110.production" description="compile module Project110; test classes" unless="skip.tests">
    <mkdir dir="${project110.testoutput.dir}"/>
    <javac2 destdir="${project110.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.project110}/javac">
      <compilerarg line="${compiler.args.project110}"/>
      <bootclasspath refid="project110.module.bootclasspath"/>
      <classpath refid="project110.module.classpath"/>
      <src refid="project110.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.project110"/>
    </javac2>
    
    <copy todir="${project110.testoutput.dir}">
      <fileset dir="${module.project110.basedir}/tests">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.project110" description="cleanup module">
    <delete dir="${project110.output.dir}"/>
    <delete dir="${project110.testoutput.dir}"/>
  </target>
</project>